// tslint:disable
/**
 * webapi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as url from "url";

const BASE_PATH = "/".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
  csv: ",",
  ssv: " ",
  tsv: "\t",
  pipes: "|",
};

/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
  (url: string, init?: any): Promise<Response>;
}

/**
 *
 * @export
 * @interface Character
 */
export interface Character {
  /**
   *
   * @type {CharacterId}
   * @memberof Character
   */
  id?: string;
  /**
   *
   * @type {Name}
   * @memberof Character
   */
  name?: Name;
}
/**
 *
 * @export
 * @interface CharacterId
 */
export interface CharacterId {
  /**
   *
   * @type {string}
   * @memberof CharacterId
   */
  id?: string;
}
/**
 *
 * @export
 * @interface CharacterResponse
 */
export interface CharacterResponse {
  /**
   *
   * @type {Character}
   * @memberof CharacterResponse
   */
  character?: Character;
}
/**
 *
 * @export
 * @interface CharactersResponse
 */
export interface CharactersResponse {
  /**
   *
   * @type {Array<Character>}
   * @memberof CharactersResponse
   */
  characters?: Array<Character>;
}
/**
 *
 * @export
 * @interface Dialog
 */
export interface Dialog {
  /**
   *
   * @type {Array<DialogLine>}
   * @memberof Dialog
   */
  lines?: Array<DialogLine>;
}
/**
 *
 * @export
 * @interface DialogLine
 */
export interface DialogLine {
  /**
   *
   * @type {DialogLineType}
   * @memberof DialogLine
   */
  type?: DialogLineType;
  /**
   *
   * @type {string}
   * @memberof DialogLine
   */
  line?: string;
  /**
   *
   * @type {Character}
   * @memberof DialogLine
   */
  character?: Character;
  /**
   *
   * @type {number}
   * @memberof DialogLine
   */
  secondsAfterStart?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DialogLineType {
  NUMBER_0 = "Primary",
  NUMBER_1 = "Context",
}
/**
 *
 * @export
 * @interface Movie
 */
export interface Movie {
  /**
   *
   * @type {string}
   * @memberof Movie
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof Movie
   */
  name?: string;
  /**
   *
   * @type {Array<Character>}
   * @memberof Movie
   */
  characters?: Array<Character>;
  /**
   *
   * @type {Array<Quote>}
   * @memberof Movie
   */
  quotes?: Array<Quote>;
}
/**
 *
 * @export
 * @interface MovieResponse
 */
export interface MovieResponse {
  /**
   *
   * @type {Movie}
   * @memberof MovieResponse
   */
  movie?: Movie;
}
/**
 *
 * @export
 * @interface MoviesResponse
 */
export interface MoviesResponse {
  /**
   *
   * @type {Array<Movie>}
   * @memberof MoviesResponse
   */
  movies?: Array<Movie>;
}
/**
 *
 * @export
 * @interface Name
 */
export interface Name {
  /**
   *
   * @type {string}
   * @memberof Name
   */
  firstName?: string;
  /**
   *
   * @type {string}
   * @memberof Name
   */
  lastName?: string;
}
/**
 *
 * @export
 * @interface Quote
 */
export interface Quote {
  /**
   *
   * @type {Dialog}
   * @memberof Quote
   */
  dialog?: Dialog;
  /**
   *
   * @type {QuoteId}
   * @memberof Quote
   */
  id?: string;
}
/**
 *
 * @export
 * @interface QuoteId
 */
export interface QuoteId {
  /**
   *
   * @type {string}
   * @memberof QuoteId
   */
  id?: string;
}
/**
 *
 * @export
 * @interface QuoteResponse
 */
export interface QuoteResponse {
  /**
   *
   * @type {Quote}
   * @memberof QuoteResponse
   */
  quotes?: Quote;
}
/**
 *
 * @export
 * @interface QuotesResponse
 */
export interface QuotesResponse {
  /**
   *
   * @type {Array<Quote>}
   * @memberof QuotesResponse
   */
  quotes?: Array<Quote>;
}
/**
 *
 * @export
 * @interface WeatherForecast
 */
export interface WeatherForecast {
  /**
   *
   * @type {string}
   * @memberof WeatherForecast
   */
  date?: string;
  /**
   *
   * @type {number}
   * @memberof WeatherForecast
   */
  temperatureC?: number;
  /**
   *
   * @type {number}
   * @memberof WeatherForecast
   */
  temperatureF?: number;
  /**
   *
   * @type {string}
   * @memberof WeatherForecast
   */
  summary?: string;
}
